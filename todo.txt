/*set QTextStream for QString
*make QStruct Coefficient
*coefficient is member of equation class,
*equation is member in matrix class;
*matrix class (maybe better to add matrix members to eqsolverclass instead of making a new matrix class)
    *has 3 member equations
    *has an equation vector
    *has member create equation,
    *has solve matrix function(CREEP!!)

*equation class
    *has 3 member vector of 3 lineEdits ui->x_1,ui->y_1...
    *
    *has 3 member coefficients x,y,z
    *has setX, setY, setZ function
    *setX(QString fractionRep)
    //fraction rep will be retrieved by for loop on line edit vector
    //getText(ui->lineEditVector[i])
    *has a coefficient vector

*Coefficient struct
    *has QString fractionRep = lineEdit
    *has double doubleValue = numerInt/denomInt
    *has QString numerString, denomString
    *has int numerInt, denomInt
    *has bool hasDenom = false


*while line edit string is not null "in >> ch""
*getNumer()
*if hasDenom = true getDenom()

QString readNumerator(string& numeratorString = "", bool& hasDenominator)
{
    QTextStream in(lineEditString);
	
    while(lineEditString!=null)
    {
		
        if (ch.isNumber())
            numerator string += ch; 
		
        else if (ch.isChar() && ch=='/')
        {	
            hasDenominator = true;
            return numeratorString
        }
	
	else
	{
	    //errorWindow.show();
            return "";
	}
    }
}	